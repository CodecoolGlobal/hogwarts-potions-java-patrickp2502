{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/room/{id}": {
      "get": {
        "tags": [
          "room-controller"
        ],
        "operationId": "getRoomById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "room-controller"
        ],
        "operationId": "updateRoomById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "room-controller"
        ],
        "operationId": "deleteRoomById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/room": {
      "get": {
        "tags": [
          "room-controller"
        ],
        "operationId": "getAllRooms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "room-controller"
        ],
        "operationId": "addRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Room"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/room/rat-owners": {
      "get": {
        "tags": [
          "room-controller"
        ],
        "operationId": "getRoomsForRatOwners",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Room": {
        "type": "object",
        "properties": {
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "residents": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Student"
            }
          }
        }
      },
      "Student": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "houseType": {
            "type": "string",
            "enum": [
              "GRYFFINDOR",
              "HUFFLEPUFF",
              "RAVENCLAW",
              "SLYTHERIN"
            ]
          },
          "petType": {
            "type": "string",
            "enum": [
              "CAT",
              "RAT",
              "OWL",
              "NONE"
            ]
          }
        }
      }
    }
  }
}